apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    com.centurylinklabs.watchtower.enable: "true"
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
    traefik.enable: "true"
    traefik.http.routers.pihole-secure.entrypoints: web-secure
    traefik.http.routers.pihole-secure.rule: Host(`pihole.cloud-migrations.nl`, `www.pihole.cloud-migrations.nl`)
    traefik.http.routers.pihole-secure.tls: "true"
    traefik.http.routers.pihole-secure.tls.certresolver: production
    traefik.http.services.pihole-secure.loadbalancer.server.port: "80"
    traefik.tcp.routers.dns.entrypoints: dns
    traefik.tcp.routers.dns.rule: HostSNI(`53.cloud-migrations.nl`)
    traefik.tcp.routers.dns.service: pihole
    traefik.tcp.routers.dnsoverhttps.entrypoints: web-secure
    traefik.tcp.routers.dnsoverhttps.rule: HostSNI(`443.cloud-migrations.nl`)
    traefik.tcp.routers.dnsoverhttps.tls.certresolver: production
    traefik.tcp.routers.dnsovertls.entrypoints: dnsovertls
    traefik.tcp.routers.dnsovertls.rule: HostSNI(`853.cloud-migrations.nl`)
    traefik.tcp.routers.dnsovertls.tls.certresolver: production
    traefik.tcp.services.pihole.loadbalancer.server.port: "53"
    traefik.udp.routers.udpdns.entrypoints: udpdns
    traefik.udp.routers.udpdns.service: pihole
    traefik.udp.services.pihole.loadbalancer.server.port: 53/udp
  creationTimestamp: null
  labels:
    io.kompose.service: pihole
  name: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pihole
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        com.centurylinklabs.watchtower.enable: "true"
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
        traefik.enable: "true"
        traefik.http.routers.pihole-secure.entrypoints: web-secure
        traefik.http.routers.pihole-secure.rule: Host(`pihole.cloud-migrations.nl`, `www.pihole.cloud-migrations.nl`)
        traefik.http.routers.pihole-secure.tls: "true"
        traefik.http.routers.pihole-secure.tls.certresolver: production
        traefik.http.services.pihole-secure.loadbalancer.server.port: "80"
        traefik.tcp.routers.dns.entrypoints: dns
        traefik.tcp.routers.dns.rule: HostSNI(`53.cloud-migrations.nl`)
        traefik.tcp.routers.dns.service: pihole
        traefik.tcp.routers.dnsoverhttps.entrypoints: web-secure
        traefik.tcp.routers.dnsoverhttps.rule: HostSNI(`443.cloud-migrations.nl`)
        traefik.tcp.routers.dnsoverhttps.tls.certresolver: production
        traefik.tcp.routers.dnsovertls.entrypoints: dnsovertls
        traefik.tcp.routers.dnsovertls.rule: HostSNI(`853.cloud-migrations.nl`)
        traefik.tcp.routers.dnsovertls.tls.certresolver: production
        traefik.tcp.services.pihole.loadbalancer.server.port: "53"
        traefik.udp.routers.udpdns.entrypoints: udpdns
        traefik.udp.routers.udpdns.service: pihole
        traefik.udp.services.pihole.loadbalancer.server.port: 53/udp
      creationTimestamp: null
      labels:
        io.kompose.network/web-secure: "true"
        io.kompose.service: pihole
    spec:
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: Europe/London
          image: pihole/pihole:latest
          name: pihole.dns
          ports:
            - containerPort: 53
              protocol: UDP
          resources: {}
          volumeMounts:
            - mountPath: /etc/pihole/
              name: pihole-claim0
            - mountPath: /etc/dnsmasq.d/
              name: pihole-claim1
      restartPolicy: Always
      volumes:
        - name: pihole-claim0
          persistentVolumeClaim:
            claimName: pihole-claim0
        - name: pihole-claim1
          persistentVolumeClaim:
            claimName: pihole-claim1
status: {}
